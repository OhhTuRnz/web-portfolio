---
export interface Props {
  title: string;
  description: string;
  image?: string;
  video?: string;
  poster?: string;
  technologies: string[];
  github?: string;
  demo?: string;
  paper?: string;
  featured?: boolean;
  type?: 'research' | 'project' | 'poster';
}

const { 
  title, 
  description, 
  image, 
  video, 
  poster,
  technologies, 
  github, 
  demo, 
  paper,
  featured = false,
  type = 'project'
} = Astro.props;

const techColors = {
  'LLMs': 'bg-blue-100 text-blue-800',
  'Autonomous Agents': 'bg-purple-100 text-purple-800',
  'Python': 'bg-green-100 text-green-800',
  'Reinforcement Learning': 'bg-red-100 text-red-800',
  'Robotics': 'bg-orange-100 text-orange-800',
  'Neural Networks': 'bg-yellow-100 text-yellow-800',
  'ROS': 'bg-indigo-100 text-indigo-800',
  'PyTorch': 'bg-pink-100 text-pink-800',
  'Multi-Agent': 'bg-teal-100 text-teal-800',
  'RL': 'bg-cyan-100 text-cyan-800',
  'Communication': 'bg-lime-100 text-lime-800',
  'Open Source': 'bg-emerald-100 text-emerald-800',
  'LLM': 'bg-violet-100 text-violet-800',
  'C++': 'bg-rose-100 text-rose-800',
  'Teleoperation': 'bg-blue-200 text-blue-900',
  'Space Robotics': 'bg-purple-200 text-purple-900',
  'Humanoids': 'bg-cyan-200 text-cyan-900',
  'Kerbal': 'bg-green-200 text-green-900'
};

// Determine media content
const hasVideo = video && video.trim() !== '';
const hasPoster = poster && poster.trim() !== '';
const hasImage = image && image.trim() !== '';
---

<div class={`project-card bg-gradient-to-br from-slate-800 to-slate-700 rounded-xl overflow-hidden shadow-xl hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-2 group border border-slate-600 hover:border-blue-500/50 ${featured ? 'lg:col-span-1' : ''}`}>
  <!-- Media Container -->
  <div class="relative overflow-hidden aspect-video bg-slate-900">
    {hasVideo ? (
      <!-- Video Content -->
      <div class="relative w-full h-full">
        <video 
          class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
          poster={poster || image}
          muted
          loop
          playsinline
          onmouseenter="this.play()"
          onmouseleave="this.pause()"
        >
          <source src={video} type="video/mp4" />
          Your browser does not support the video tag.
        </video>
        
        <!-- Video overlay -->
        <div class="absolute inset-0 bg-gradient-to-t from-slate-900/80 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
        
        <!-- Play indicator -->
        <div class="absolute inset-0 flex items-center justify-center opacity-70 group-hover:opacity-0 transition-opacity duration-300">
          <div class="w-16 h-16 bg-black/50 rounded-full flex items-center justify-center backdrop-blur-sm">
            <svg class="w-8 h-8 text-white ml-1" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z" clip-rule="evenodd"></path>
            </svg>
          </div>
        </div>
      </div>
    ) : hasPoster ? (
      <!-- Poster Content -->
      <div class="relative w-full h-full group">
        <img 
          src={poster} 
          alt={`${title} poster`}
          class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
        />
        <div class="absolute inset-0 bg-gradient-to-t from-slate-900/80 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
        
        <!-- Poster indicator -->
        <div class="absolute top-4 right-4 bg-purple-600 text-white px-3 py-1 rounded-full text-xs font-semibold">
          ðŸ“Š Poster
        </div>
      </div>
    ) : hasImage ? (
      <!-- Image Content -->
      <div class="relative w-full h-full">
        <img 
          src={image} 
          alt={title}
          class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
        />
        <div class="absolute inset-0 bg-gradient-to-t from-slate-900/80 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
      </div>
    ) : (
      <!-- Fallback gradient -->
      <div class="w-full h-full bg-gradient-to-br from-blue-600 via-purple-600 to-cyan-600 flex items-center justify-center">
        <div class="text-white text-6xl opacity-50">
          {type === 'research' ? 'ðŸ”¬' : type === 'poster' ? 'ðŸ“Š' : 'ðŸš€'}
        </div>
      </div>
    )}
    
    <!-- Type badge -->
    <div class="absolute top-4 left-4">
      <span class={`px-3 py-1 rounded-full text-xs font-semibold ${
        type === 'research' ? 'bg-blue-600 text-white' :
        type === 'poster' ? 'bg-purple-600 text-white' :
        'bg-cyan-600 text-white'
      }`}>
        {type === 'research' ? 'ðŸ”¬ Research' : type === 'poster' ? 'ðŸ“Š Poster' : 'ðŸš€ Project'}
      </span>
    </div>
  </div>

  <!-- Content -->
  <div class="p-6 flex flex-col flex-grow">
    <h3 class="text-xl font-semibold text-white mb-3 group-hover:text-blue-400 transition-colors leading-tight">
      {title}
    </h3>
    
    <p class="text-gray-300 mb-4 leading-relaxed flex-grow text-sm">
      {description}
    </p>
    
    <!-- Technologies -->
    <div class="flex flex-wrap gap-2 mb-6">
      {technologies.map(tech => (
        <span class={`px-3 py-1 text-xs font-medium rounded-full transition-all hover:scale-105 ${techColors[tech] || 'bg-gray-100 text-gray-800'}`}>
          {tech}
        </span>
      ))}
    </div>
    
    <!-- Action buttons -->
    <div class="flex flex-wrap gap-3 mt-auto">
      {github && (
        <a 
          href={github} 
          target="_blank"
          class="flex items-center space-x-2 text-gray-300 hover:text-white transition-colors hover:bg-slate-700 px-3 py-2 rounded-lg"
        >
          <i class="fab fa-github"></i>
          <span class="text-sm">Code</span>
        </a>
      )}
      
      {demo && (
        <a 
          href={demo}
          target="_blank"
          class="flex items-center space-x-2 text-blue-400 hover:text-blue-300 transition-colors hover:bg-blue-900/20 px-3 py-2 rounded-lg"
        >
          <i class="fas fa-external-link-alt"></i>
          <span class="text-sm">Demo</span>
        </a>
      )}
      
      {paper && (
        <a 
          href={paper}
          target="_blank"
          class="flex items-center space-x-2 text-purple-400 hover:text-purple-300 transition-colors hover:bg-purple-900/20 px-3 py-2 rounded-lg"
        >
          <i class="fas fa-file-pdf"></i>
          <span class="text-sm">Paper</span>
        </a>
      )}
    </div>
  </div>
</div>

<style>
  .project-card {
    animation: fadeInUp 0.6s ease-out forwards;
    opacity: 0;
    transform: translateY(30px);
  }
  
  .project-card:nth-child(1) { animation-delay: 0.1s; }
  .project-card:nth-child(2) { animation-delay: 0.2s; }
  .project-card:nth-child(3) { animation-delay: 0.3s; }
  .project-card:nth-child(4) { animation-delay: 0.4s; }
  
  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .aspect-video {
    aspect-ratio: 16 / 9;
  }
</style>