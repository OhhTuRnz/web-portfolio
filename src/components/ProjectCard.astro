---
export interface Props {
  project: {
    id: string;
    title: string;
    description: string;
    shortDescription: string;
    technologies: string[];
    category: string;
    status: string;
    media?: {
      type: string;
      url: string;
      poster?: string;
      thumbnail?: string;
    };
    links: {
      github?: string;
      demo?: string;
      paper?: string;
    };
    featured?: boolean;
  };
  index?: number;
}

const { project, index = 0 } = Astro.props;

const techColors = {
  'Python': 'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300',
  'PyTorch': 'bg-orange-100 text-orange-800 dark:bg-orange-900/30 dark:text-orange-300',
  'ROS2': 'bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300',
  'ROS': 'bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300',
  'C++': 'bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-300',
  'JavaScript': 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300',
  'React': 'bg-cyan-100 text-cyan-800 dark:bg-cyan-900/30 dark:text-cyan-300',
  'MATLAB': 'bg-indigo-100 text-indigo-800 dark:bg-indigo-900/30 dark:text-indigo-300',
  'OpenGL': 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300',
  'TensorFlow': 'bg-orange-100 text-orange-800 dark:bg-orange-900/30 dark:text-orange-300',
  'Reinforcement Learning': 'bg-pink-100 text-pink-800 dark:bg-pink-900/30 dark:text-pink-300',
  'Advanced RL': 'bg-pink-100 text-pink-800 dark:bg-pink-900/30 dark:text-pink-300',
  'Space Systems': 'bg-violet-100 text-violet-800 dark:bg-violet-900/30 dark:text-violet-300',
  'Kerbal': 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300',
  'Mission Planning': 'bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300',
  'Neural Networks': 'bg-indigo-100 text-indigo-800 dark:bg-indigo-900/30 dark:text-indigo-300',
  'Autonomous Systems': 'bg-cyan-100 text-cyan-800 dark:bg-cyan-900/30 dark:text-cyan-300',
  'Game AI': 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300',
  'default': 'bg-gray-100 text-gray-800 dark:bg-gray-700/30 dark:text-gray-300'
};

const categoryColors = {
  'research': 'bg-blue-600',
  'personal': 'bg-purple-600'
};

const statusColors = {
  'active': 'text-green-400 bg-green-900/20 border-green-500/30',
  'completed': 'text-gray-400 bg-gray-900/20 border-gray-500/30'
};

// Helper function to check if URL is YouTube
const isYouTubeUrl = (url) => {
  return url && (url.includes('youtube.com') || url.includes('youtu.be'));
};

// Helper function to get YouTube video ID
const getYouTubeVideoId = (url) => {
  if (!url) return null;
  
  let videoId = null;
  
  if (url.includes('youtube.com/watch?v=')) {
    videoId = url.split('v=')[1]?.split('&')[0];
  } else if (url.includes('youtu.be/')) {
    videoId = url.split('youtu.be/')[1]?.split('?')[0];
  }
  
  return videoId;
};

// Helper function to get YouTube thumbnail
const getYouTubeThumbnail = (url) => {
  const videoId = getYouTubeVideoId(url);
  return videoId ? `https://img.youtube.com/vi/${videoId}/maxresdefault.jpg` : null;
};
---

<article 
  class="project-card group relative bg-slate-800/40 backdrop-blur-sm rounded-xl overflow-hidden border border-slate-700/30 hover:border-blue-500/50 transition-all duration-500 hover:transform hover:scale-105 hover:shadow-2xl"
  style={`animation-delay: ${index * 0.1}s;`}
  role="article"
  aria-labelledby={`project-title-${project.id}`}
  tabindex="0"
  data-project={JSON.stringify(project)}
>
  <!-- Media Section -->
  <div class="relative overflow-hidden aspect-video bg-slate-900/50">
    {project.media ? (
      project.media.type === 'video' ? (
        isYouTubeUrl(project.media.url) ? (
          <!-- YouTube Video - Use thumbnail with play button overlay -->
          <div class="relative w-full h-full group cursor-pointer" onclick={`window.open('${project.media.url}', '_blank')`}>
            <img 
              src={getYouTubeThumbnail(project.media.url) || project.media.poster || 'https://images.pexels.com/photos/8386440/pexels-photo-8386440.jpeg?auto=compress&cs=tinysrgb&w=800'}
              alt={`${project.title} - YouTube Video Thumbnail`}
              class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-110"
              loading="lazy"
            />
            
            <!-- YouTube play button overlay -->
            <div class="absolute inset-0 bg-black/30 flex items-center justify-center group-hover:bg-black/20 transition-all duration-300">
              <div class="w-20 h-20 bg-red-600 rounded-full flex items-center justify-center shadow-2xl transform group-hover:scale-110 transition-transform duration-300">
                <svg class="w-8 h-8 text-white ml-1" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                  <path d="M8 5v14l11-7z"/>
                </svg>
              </div>
            </div>
            
            <!-- YouTube branding -->
            <div class="absolute top-4 right-4 bg-red-600 text-white px-3 py-1 rounded text-sm font-semibold">
              YouTube
            </div>
            
            <!-- Gradient overlay -->
            <div class="absolute inset-0 bg-gradient-to-t from-slate-900/80 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none"></div>
          </div>
        ) : (
          <!-- Regular Video -->
          <div class="relative w-full h-full">
            <video 
              class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-110"
              poster={project.media.poster || project.media.thumbnail}
              muted
              loop
              playsinline
              preload="metadata"
              aria-label={`Video demonstration of ${project.title}`}
            >
              <source src={project.media.url} type="video/mp4" />
              <p>Your browser does not support the video tag.</p>
            </video>
            
            <!-- Video overlay -->
            <div class="absolute inset-0 bg-gradient-to-t from-slate-900/80 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
            
            <!-- Play indicator -->
            <div class="absolute inset-0 flex items-center justify-center opacity-70 group-hover:opacity-0 transition-opacity duration-300">
              <div class="w-16 h-16 bg-black/50 rounded-full flex items-center justify-center backdrop-blur-sm">
                <svg class="w-8 h-8 text-white ml-1" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z" clip-rule="evenodd"></path>
                </svg>
              </div>
            </div>
          </div>
        )
      ) : (
        <div class="relative w-full h-full">
          <img 
            src={project.media.url} 
            alt={`${project.title} preview`}
            class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-110"
            loading="lazy"
          />
          <div class="absolute inset-0 bg-gradient-to-t from-slate-900/80 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
        </div>
      )
    ) : (
      <!-- Fallback gradient -->
      <div class="w-full h-full bg-gradient-to-br from-blue-600/20 via-purple-600/20 to-cyan-600/20 flex items-center justify-center">
        <div class="text-white/30 text-6xl">
          {project.category === 'research' ? 'üî¨' : 'üöÄ'}
        </div>
      </div>
    )}
    
    <!-- Category and Status badges -->
    <div class="absolute top-4 left-4 flex items-center space-x-2">
      <span class={`px-3 py-1 rounded-full text-xs font-semibold text-white ${categoryColors[project.category]}`}>
        {project.category === 'research' ? 'üî¨ Research' : 'üöÄ Personal'}
      </span>
      {project.featured && (
        <span class="px-2 py-1 text-xs font-medium text-yellow-300 bg-yellow-600/20 rounded-full border border-yellow-500/30">
          ‚≠ê Featured
        </span>
      )}
    </div>
    
    <div class="absolute top-4 right-4">
      <span class={`px-2 py-1 text-xs font-medium rounded-full border ${statusColors[project.status]}`}>
        {project.status}
      </span>
    </div>
  </div>

  <!-- Content -->
  <div class="p-6 flex flex-col flex-grow">
    <h3 id={`project-title-${project.id}`} class="text-xl font-semibold text-white mb-3 group-hover:text-blue-400 transition-colors leading-tight">
      {project.title}
    </h3>
    
    <p class="text-gray-300 mb-4 leading-relaxed flex-grow text-sm">
      {project.shortDescription}
    </p>
    
    <!-- Technologies -->
    <div class="flex flex-wrap gap-2 mb-6" role="list" aria-label="Technologies used">
      {project.technologies.slice(0, 4).map(tech => (
        <span 
          class={`px-3 py-1 text-xs font-medium rounded-full transition-all hover:scale-105 ${techColors[tech] || techColors.default}`}
          role="listitem"
        >
          {tech}
        </span>
      ))}
      {project.technologies.length > 4 && (
        <span class="px-3 py-1 text-xs font-medium rounded-full bg-gray-700/50 text-gray-300">
          +{project.technologies.length - 4} more
        </span>
      )}
    </div>
    
    <!-- Action buttons -->
    <div class="flex flex-wrap gap-3 mt-auto" role="group" aria-label="Project links">
      {project.links.github && (
        <a 
          href={project.links.github} 
          target="_blank"
          rel="noopener noreferrer"
          class="flex items-center space-x-2 text-gray-300 hover:text-white transition-colors hover:bg-slate-700/50 px-3 py-2 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500/50"
          aria-label={`View ${project.title} source code on GitHub`}
        >
          <i class="fab fa-github" aria-hidden="true"></i>
          <span class="text-sm">Code</span>
        </a>
      )}
      
      {project.links.demo && (
        <a 
          href={project.links.demo}
          target="_blank"
          rel="noopener noreferrer"
          class="flex items-center space-x-2 text-blue-400 hover:text-blue-300 transition-colors hover:bg-blue-900/20 px-3 py-2 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500/50"
          aria-label={`View ${project.title} demo`}
        >
          {isYouTubeUrl(project.links.demo) ? (
            <i class="fab fa-youtube" aria-hidden="true"></i>
          ) : (
            <i class="fas fa-external-link-alt" aria-hidden="true"></i>
          )}
          <span class="text-sm">{isYouTubeUrl(project.links.demo) ? 'Video' : 'Demo'}</span>
        </a>
      )}
      
      {project.links.paper && (
        <a 
          href={project.links.paper}
          target="_blank"
          rel="noopener noreferrer"
          class="flex items-center space-x-2 text-purple-400 hover:text-purple-300 transition-colors hover:bg-purple-900/20 px-3 py-2 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500/50"
          aria-label={`Read ${project.title} research paper`}
        >
          <i class="fas fa-file-pdf" aria-hidden="true"></i>
          <span class="text-sm">Paper</span>
        </a>
      )}
    </div>
  </div>
</article>

<style>
  .project-card {
    animation: fadeInUp 0.6s ease-out forwards;
    opacity: 0;
    transform: translateY(30px);
  }
  
  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .aspect-video {
    aspect-ratio: 16 / 9;
  }
  
  /* Enhanced hover effects */
  .project-card:hover {
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.5);
  }
  
  /* Focus styles for accessibility */
  .project-card:focus {
    outline: 2px solid #3b82f6;
    outline-offset: 2px;
  }
  
  /* Video interaction */
  .project-card:hover video {
    animation: playHint 0.3s ease-in-out;
  }
  
  @keyframes playHint {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.02); }
  }
  
  /* YouTube thumbnail styling */
  .project-card .youtube-thumbnail {
    cursor: pointer;
  }
  
  .project-card .youtube-thumbnail:hover .play-button {
    transform: scale(1.1);
  }
</style>

<script>
  // Enhanced video interaction (for non-YouTube videos)
  document.addEventListener('DOMContentLoaded', () => {
    const projectCards = document.querySelectorAll('.project-card');
    
    projectCards.forEach(card => {
      const video = card.querySelector('video');
      
      if (video) {
        // Play video on hover
        card.addEventListener('mouseenter', () => {
          video.play().catch(() => {
            // Silently handle autoplay restrictions
          });
        });
        
        // Pause video when not hovering
        card.addEventListener('mouseleave', () => {
          video.pause();
          video.currentTime = 0;
        });
        
        // Handle focus for accessibility
        card.addEventListener('focus', () => {
          video.play().catch(() => {});
        });
        
        card.addEventListener('blur', () => {
          video.pause();
          video.currentTime = 0;
        });
      }
    });
  });
</script>