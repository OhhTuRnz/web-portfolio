---
export interface Props {
  url: string;
  title?: string;
  description?: string;
  image?: string;
  domain?: string;
}

const { url, title, description, image, domain } = Astro.props;

// Extract domain from URL if not provided
const getDomain = (url: string) => {
  try {
    return new URL(url).hostname.replace('www.', '');
  } catch {
    return 'External Link';
  }
};

const displayDomain = domain || getDomain(url);
---

<div class="link-preview-container">
  <a 
    href={url} 
    target="_blank" 
    rel="noopener noreferrer"
    class="link-preview-trigger"
  >
    <slot />
  </a>
  
  <div class="link-preview-popup">
    <div class="link-preview-content">
      {image && (
        <div class="link-preview-image">
          <img src={image} alt={title || 'Link preview'} />
        </div>
      )}
      
      <div class="link-preview-text">
        <div class="link-preview-domain">{displayDomain}</div>
        {title && (
          <h4 class="link-preview-title">{title}</h4>
        )}
        {description && (
          <p class="link-preview-description">{description}</p>
        )}
      </div>
    </div>
  </div>
</div>

<style>
  .link-preview-container {
    position: relative;
    display: inline-block;
  }
  
  .link-preview-trigger {
    text-decoration: none;
    color: inherit;
  }
  
  .link-preview-popup {
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    margin-bottom: 8px;
    width: 320px;
    background: rgba(15, 23, 42, 0.95);
    border: 1px solid rgba(59, 130, 246, 0.3);
    border-radius: 12px;
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.3), 0 8px 10px -6px rgba(0, 0, 0, 0.2);
    backdrop-filter: blur(20px);
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    z-index: 1000;
    pointer-events: none;
  }
  
  .link-preview-container:hover .link-preview-popup {
    opacity: 1;
    visibility: visible;
    transform: translateX(-50%) translateY(-4px);
  }
  
  .link-preview-content {
    padding: 0;
    border-radius: 12px;
    overflow: hidden;
  }
  
  .link-preview-image {
    width: 100%;
    height: 160px;
    overflow: hidden;
    background: linear-gradient(135deg, rgba(59, 130, 246, 0.1), rgba(168, 85, 247, 0.1));
  }
  
  .link-preview-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }
  
  .link-preview-container:hover .link-preview-image img {
    transform: scale(1.05);
  }
  
  .link-preview-text {
    padding: 16px;
  }
  
  .link-preview-domain {
    font-size: 0.75rem;
    color: var(--arclab-gray-400);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin-bottom: 6px;
  }
  
  .link-preview-title {
    font-size: 0.875rem;
    font-weight: 600;
    color: white;
    margin: 0 0 8px 0;
    line-height: 1.4;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .link-preview-description {
    font-size: 0.75rem;
    color: var(--arclab-gray-300);
    margin: 0;
    line-height: 1.5;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  /* Arrow pointing down */
  .link-preview-popup::after {
    content: '';
    position: absolute;
    top: 100%;
    left: 50%;
    transform: translateX(-50%);
    border: 6px solid transparent;
    border-top-color: rgba(15, 23, 42, 0.95);
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .link-preview-popup {
      width: 280px;
      left: 0;
      transform: none;
    }
    
    .link-preview-container:hover .link-preview-popup {
      transform: translateY(-4px);
    }
    
    .link-preview-popup::after {
      left: 20px;
      transform: none;
    }
  }
</style>